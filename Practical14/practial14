import xml.dom.minidom
import re
import pandas as pd

content=xml.dom.minidom.parse('go_obo.xml')
root=content.documentElement
terms=root.getElementsByTagName('term')

def count_child_nodes(id, parent_child_relations):
	if id not in parent_child_relations:
		return 0
	child_nodes=parent_child_relations[id]
	count=len(child_nodes)

	for child_node in child_nodes:
		count += count_child_nodes(child_node,parent_child_relations)

	return count

parent_child_relations={} #make a dictionary store the parent nodes as keys and their corresponding lists of child nodes as values.

id_list=[]
name_list=[]
defstr_list=[]
child_count_list=[]

for term in terms:
	id=term.getElementsByTagName('id')[0].firstChild.data
	is_a_elements=term.getElementsByTagName('is_a')
	if is_a_elements:
		for is_a_element in is_a_elements:
			is_a_id= is_a_element.firstChild.data.strip().strip('!').split()[0]
			if is_a_id not in parent_child_relations:
				parent_child_relations[is_a_id]=[]		
			parent_child_relations[is_a_id].append(id) #appends the current child node go_id to the list of child nodes associated with the respective parent node			

for term in terms:
	id_all=term.getElementsByTagName('id')[0]
	id_value=id_all.firstChild.data
	name_all=term.getElementsByTagName('name')[0]
	name_value=name_all.firstChild.data
	def_all=term.getElementsByTagName('def')[0]
	defstr_all=def_all.getElementsByTagName('defstr')[0]
	defstr_value=defstr_all.firstChild.data
	autophagosome=re.search('autophagosome',defstr_value)
	if autophagosome:
		id_list.append(id_value) #add elements id_value to id_list)
		name_list.append(name_value)
		defstr_list.append(defstr_value)
		is_a_count=count_child_nodes(id_value,parent_child_relations)
		child_count_list.append(str(is_a_count))	


df=pd.DataFrame({'ID':id_list,'Name':name_list,'definition':defstr_list,'Child nodes':child_count_list})

id_str=",".join(id_list)
name_str=",".join(name_list)
defstr_str=",".join(defstr_list)
child_count_str=",".join(child_count_list)

print("ID:",id_str)
print("Name:",name_str)
print("Defstr:",defstr_str)
print("Child Count:",child_count_str)

df.to_excel('autophagosome.xlsx',index=False)

